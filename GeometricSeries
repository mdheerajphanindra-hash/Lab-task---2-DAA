//GeometricSeries iterative mehod  Programs for summation of series 1+X+X^2+X^3+â€¦with different time complexities.

/*#include<iostream>
using namespace std;


int pow(int x,int i){
    if(i==0){
        return 1;
    }
    int pow=1;
    for(int j=1;j<i;j++){
        pow*=x;
    }
    return pow;
}

int *cal(int *sum,int x,int r){
    for(int i=0;i<=r;i++){
        cout<<"*sum="<<*sum<<" pow("<<x<<","<<i<<")="<<pow(x,i)<<endl;
        *sum+=pow(x,i);
        
    }
    return sum;
}


int main(){
    int x;
    int r;
    cout<<"Enter the number to find its power=";
    cin>>x;
    cout<<"Enter till how many time the power should be caluclated=";
    cin>>r;

    int sum=0;
    cal(&sum,x,r);
    cout<<"The sum is="<<sum;

    return 0;

}*/

//recursive method

/*#include <iostream>
using namespace std;

int power(int x,int n){
    if(n==0) return 1;
    return x*power(x,n-1);
}

int seriesSum(int x,int r){
    if(r==0) return 1;
    return seriesSum(x,r-1)+power(x,r);
}

int main(){
    int x,r;
    cin>>x>>r;
    cout<<seriesSum(x,r);
    return 0;
}*/



//GP formule

/*#include <iostream>
#include <cmath>
using namespace std;

int Algo1_SumGeoSeries(int a,int r,int n){
    if(r==1) return a*n;
    return (a*(pow(r,n)-1))/(r-1);
}

int main(){
    int a,r,n;
    cin>>a>>r>>n;
    cout<<Algo1_SumGeoSeries(a,r,n);
    return 0;
}*/





